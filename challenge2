# Challenge 1: Fonction qui calcule le salaire horaire et le salaire total

nom=input("Entrez votre nom: ")
salaireh=float(input("Entrez votre salaire: "))
nbr_heure=int(input("Entrez le nombre d'heures travaillées: "))
salaire_total = 0
def horaire_sup(nom, salaireh, nbr_heure):
    if nbr_heure > 40 :
        supp =  nbr_heure - 40
        salaire_horaire = supp *1.5* salaireh
        print("Votre salaire horaire est de " + str(salaire_horaire) + " dh.")
        salaire_total = salaireh*40 + salaire_horaire
        print(" Bonjour " +nom+ " Votre salaire total est de " + str(salaire_total) + " dh.")
    else:
        print("Bonjour " + nom + ", vous n'avez pas travaillé plus de 40 heures, donc votre salaire reste le même: " + str(salaire) + " dh.")
    return salaire_total 
horaire_sup(nom, salaireh, nbr_heure)


# Challenge 2: Fonction qui calcule la somme de deux nombres

a=int(input("Entrez le premier nombre: "))
b=int(input("Entrez le deuxième nombre: "))
def calculation(a, b):
    somme=0
    somme = a + b
    print("La somme de " + str(a) + " et " + str(b) + " est: " + str(somme))
    diff=0
    if a > b:
        diff = a - b
    else:
        diff = b - a
    print("La différence entre " + str(a) + " et " + str(b) + " est: " + str(diff))
    return somme, diff
calculation(a, b) 


# Challenge 3: fonctions
#factorial
# Fonction qui calcule la factorielle d'un nombre

n=int(input("Entrez un nombre pour calculer sa factorielle: "))
def factorial(n):
    if n == 0 or n == 1:
        return 1
    else:
        return n * factorial(n - 1)
result = factorial(n)
print(f"La factorielle de {n} est: {result}")

#table de multiplication

m=int(input("Entrez un nombre pour afficher sa table de multiplication: "))
def multiplication_table(m):
    print(f"Table de multiplication de {m}:")
    for i in range(1, 11):
        print(f"{m} x {i} = {m * i}")
multiplication_table(m)
print(multiplication_table(m))

#carree parfait

import math
try:
    L = int(input("Entrez un nombre pour vérifier s'il est un carré parfait: "))
    def carree_parfait(L):
        if L < 0:
            return False
        root = math.isqrt(L)  # Utilise isqrt pour obtenir la racine entière
        return root * root == L

    print(f"{L} est un carré parfait: {carree_parfait(L)}")
except ValueError:
    print("Veuillez entrer un nombre entier valide.")


#chaine de caracteres

chaine = input("Entrez une chaîne de caractères: ")
def chaine_caracteres(chaine):
    for i in range(len(chaine)):
        print(f"Caractère à l'index {i}: {chaine[i]}")
    return chaine
chaine_caracteres(chaine) 

#longueur de motd'une  phrase

phrase = input("Entrez une phrase: ")
def phrase_caracteres(phrase):
    mots = phrase.split()
    if not mots:
        return ""  # Gérer le cas d'une phrase vide
    return max(mots, key=len)

print("Longueurs des mots dans la phrase:", phrase_caracteres(phrase))


#nbr d'occurences d'un caractere dans une phrase

ch=input("Entrez une phrase: ")
def count_character_occurrences(ch):
    occurrences = {}
    for caractere in ch:
        if caractere in occurrences:
            occurrences[caractere] += 1
        else:
            occurrences[caractere] = 1
    return occurrences 
resultat = count_character_occurrences(ch)
print(resultat)
